// <auto-generated />
using System;
using DataInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataInfrastructure.Migrations
{
    [DbContext(typeof(UnePetsDBContext))]
    partial class UnePetsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnuncioInteresses", b =>
                {
                    b.Property<int>("AdotanteID")
                        .HasColumnType("int");

                    b.Property<int>("AnuncioID")
                        .HasColumnType("int");

                    b.HasKey("AdotanteID", "AnuncioID");

                    b.HasIndex("AnuncioID");

                    b.ToTable("AnuncioInteresses");
                });

            modelBuilder.Entity("Domain.Anuncio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DataAnuncio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EhCastrado")
                        .HasColumnType("bit");

                    b.Property<bool>("EhDeficiente")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<int>("PessoaID")
                        .HasColumnType("int");

                    b.Property<int>("Porte")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PessoaID");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Domain.Mensagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AnuncioID")
                        .HasColumnType("int");

                    b.Property<int?>("AnuncioID1")
                        .HasColumnType("int");

                    b.Property<string>("Corpo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinatarioID")
                        .HasColumnType("int");

                    b.Property<int>("RemetenteID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AnuncioID");

                    b.HasIndex("AnuncioID1");

                    b.HasIndex("DestinatarioID");

                    b.HasIndex("RemetenteID");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength();

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .IsFixedLength();

                    b.Property<int>("Imagem")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .IsFixedLength();

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(68)
                        .IsUnicode(false)
                        .HasColumnType("char(68)")
                        .IsFixedLength();

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength();

                    b.Property<int>("UF")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("AnuncioInteresses", b =>
                {
                    b.HasOne("Domain.Pessoa", null)
                        .WithMany()
                        .HasForeignKey("AdotanteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_AnuncioInteresses_AdotanteID");

                    b.HasOne("Domain.Anuncio", null)
                        .WithMany()
                        .HasForeignKey("AnuncioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_AnuncioInteresses_AnuncioID");
                });

            modelBuilder.Entity("Domain.Anuncio", b =>
                {
                    b.HasOne("Domain.Pessoa", "Pessoa")
                        .WithMany("Anuncios")
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Domain.Mensagem", b =>
                {
                    b.HasOne("Domain.Anuncio", null)
                        .WithMany("MensagensEnviadas")
                        .HasForeignKey("AnuncioID");

                    b.HasOne("Domain.Anuncio", null)
                        .WithMany("MensagensRecebidas")
                        .HasForeignKey("AnuncioID1");

                    b.HasOne("Domain.Pessoa", "Destinatario")
                        .WithMany("MensagensRecebidas")
                        .HasForeignKey("DestinatarioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Pessoa", "Remetente")
                        .WithMany("MensagensEnviadas")
                        .HasForeignKey("RemetenteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Destinatario");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("Domain.Anuncio", b =>
                {
                    b.Navigation("MensagensEnviadas");

                    b.Navigation("MensagensRecebidas");
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("MensagensEnviadas");

                    b.Navigation("MensagensRecebidas");
                });
#pragma warning restore 612, 618
        }
    }
}
